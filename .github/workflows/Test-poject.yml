# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Hello Ronen  Maven

on:
  push:
    branches: [ master ]
 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        cd my-app
        mvn -B package --file pom.xml
        mvn release:update-versions
        mkdir staging && cp target/*.jar staging
   
   
    - name: Update POM FILE
      run: |
        git config --global user.name 'ronbit1973'
        git diff --staged --name-status
        ls -a
        git add pom.xml
        git commit -am "Upadte POM"
        git push origin master
         
   
    - name: RUN THE JAR 
      run: |
        cd my-app
        java -cp target/classes com.mycompany.app.App
        
    - name: docker login 
      env:
         DOCKER_USER: ${{ secrets.DOCKER_USER}}
         DOCKER_PASS: ${{ secrets.DOCKER_PASS}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASS
         
    - name: Create artificat
      uses: actions/upload-artifact@v2
      with:
         name: hello-ronen-artifact
         path: my-app/staging
    - name: Docker Build by Bash
      run: |
            
            cd  my-app/staging
            GetJarName=`ls *.jar`
            for eachfile in $GetJarName
            do
              MyJar=$eachfile
            done
            Docker_ver=${MyJar:7:5}
            cd ..
            docker build  -t ronbit/ronen-test:${Docker_ver} .
            docker push ronbit/ronen-test:${Docker_ver}    
          
       
        
       
        
      
        
        
           
           
            
        
